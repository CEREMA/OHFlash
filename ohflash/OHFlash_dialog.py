# -*- coding: utf-8 -*-
"""
/***************************************************************************
 OHFlashDialog
                                 A QGIS plugin
 Ce plugin permet d'itérer sur tous les éléments d'une couche en zoomant dessus et en éditant une colonne de cette couche selon le choix de l'utilisateur. Initialement développé pour l'édition des ouvrages hydrauliques, ce plugin peut être utilisé pour toute autre couche.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-05-17
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Cerema
        email                : nassim.cheikh@cerema.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'OHFlash_dialog_base.ui'))


class OHFlashDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(OHFlashDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
